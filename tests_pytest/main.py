'Venv(виртуальное окружение)-это какое-то изолированное пространство для установки туда библеотек, пакетов'

'Устанавливать библеотеки, пакеты на компьютер не желательно. Могут возникнуть конфликты(ошибки)'

'Pip, poetry(установщик пакетов, библеотек)- при помощи этих инструментов можно устанавливать библеотеки и пакеты. Poetry удобнее и новее, так же поддерживает виртуальное окружение из под капота'

'=============Команды poetry=============='
# poetry init - команда, которая инициализирует вашу директорию где вы кодите, как проект. Создается файл pyproject.toml с информацией о вашем проекте: название проекта, версия проекта, автор проекта и т.д, так же там есть информация об установленных блиблеотеках

# poetry shell - создает виртуальное окружение и сразу же активирует его 

# exit, deactivate - деактивация виртуального окружения

# poetry add name - устанавливает библиотеку name. Так же создается файл - poetry.lock, в этом файле у вас содержится информация о всех установленных библеотеках

'==================Команды pip и venv================'
# pip install name - это команда, для установки библиотеки name
# python3 -m venv venv_name - создаст виртуальное окружение с название venv_name
# . venv/bin/activate - активация виртуального окружения
# deactivate - деакативация виртуального окружения
# Чтобы отслеживать установленные библиотеки можно использовать команду pip freeze 
# В командной разработке для того чтобы другой разработчик понимал какие библиотеки у вас установлены, создается в ручную файл reqirements.txt, далее командой pip freeze > requirements.txt в этот файл записываются установленные библеотеки

def add_one(a):
    return a

def division(a, b):
    return a / b

def is_palindrom(text):
    if text.lower() == text.lower()[::-1]:
        return True
    return False











































































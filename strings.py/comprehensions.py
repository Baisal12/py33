'=============================Comprehension===================='
# генератор, с помощю которого можно сосдать последовательность используется в цикл for в одну строку

# range()
# []
# {}
# {:}

# результат for элемент in последовательность
#list1 = [x ** 2 for x in [12, 1, 22, 2, 0]]
#print(list1)

#list_ = []
#for i in  range(1,11):
  #  if i % 2 == 0:
 #       list_.append(i)
#print(list_)


#print(list(range(2, 11, 2)))

#list_ = [i for i in range(1,11) if i %2 == 0]
#print(list_)


#list_1 = [12, True, None, 'hi', 0, False, 'makers', 'world']
#list_2 = [i for i in list_1 if isinstance(i, str)]
#print(list_2)


'================================виды comprehension===================='
'1 - list comprehension'
'2 - dict comprehension'
'3 - set comprehension'

'Dict comprehension'

dict_1 = {i:i for i in range(1, 11)}
print(dict_1)


dict_1 = {'a':1, 'b':2, 'c':3}
dict_2 = {}
for a, b in dict_1.items():
    dict_2[b] = a
    print(dict_2)

dict_1 = {'a':1, 'b':2, 'c':3}
dict_2 = {b: a for a, b in dict_1.items()}
print(dict_2)


dict_1 = {
    'a':[1,2,3],
    'b':[12,0,1],
    'c':[32,0,0]
}
dict_2 = {k: sum(v) for k, v in dict_1.items()}
print(dict_2)


set1 = {i for i in range(1,11)}
print(set1)#{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

set1 = {i for i in 'makers'}
print(set1) #{'s', 'm', 'e', 'k', 'r', 'a'}

set_1 = {12, 3, 4, 15, 1}
set_2 = {i**2 for i in set_1}
print(set_2)


set_1 = {12, 3, 4, 15, 1}
set_2 = {i**i for i in set_1}
print(set_2)

set_1 = {12, 4, 34, 5, 6}
set_2 = {str(i) for i in set_1}
print(set_2)


set_1 = {1, 12, 'hi', 34, True, 'makers'}
set_2 = {i for i in set_1 if type(i) == str}
print(set_2)

set_1 = {'we', '1', 12, 'hi', '34', True, 'makers'}
set_2 = {int(i) if str(i).isdigit() else i for i in set_1 if tupe(i)==str()}
print(set_2)

dict_1 = {i: list(range(1, i + 1)) for i in range(1, 6)}
print(dict_1)

dict_1 = {i:[i for i in range(1, i +1)] for i in range(1, 6)}
print(dict_1)

a = {'a': 3, 'b': 2}
b = {v+v for v in a.values()}
print(b)








































































































































































































































































































































































































































































































































































































































































































































































































































































































































'=========================================Циклы============================='
# Цикл - опиратор который повторяет код несколько раз 
# есть 2 вида цикла
"1. for - цикл, который работает с итерируемым обектом. Цикл заканчивает работу, когда доходит до последнего элемента итерируемого обьекта"


'2. while - цикл, который работает до тех пор пока условие верно(True)'


'Итерируемый обект - какаята последовательность, например: [1,23,"hi"], "makers", (123, True, 1, 5), dict, set'

'Итерация - процесс перебора итерирумого обьекта (когдда мы по очереди вытаскиваем элементы в последовательности)'


'---------------------------For------------------'

#list_ = [12, 'hi', True, None, [0,0,0]]
#for i in list_:
   # print(i)


#for letter in 'hello world':
    #print(letter)

'------------------------------------------------------'

#for number in [12, 3, 4, 0, -1, 20, 72723463664428742846278462846728728642764274627846287647826873]:
    #print(number * 13)

#list_ = [2, 12, 5, 3]
#for i in list_:
 #   print(i ** 2)

'---------------------------------'
#text = 'makers'
#for i in text:
   # print(i)

#list_ = [2, 5, 20, 10, 9, -1]

#for i in list_:
 #   if i % 2 == 0:
  #      print(i)

'---------------------WHILE--------------------------'

#n = 1
#while n < 10:
   # print('hello world')
   # n = n + 1

'=======================Ключивые слова в циклах======================================='
# break - пренидительная остоновка цикла
# continue - пропускает итерацию, продолжает со следуйщей итерацией

#range()

#for i in range(1, 11):
 #   if i == 3:
  #      continue
   # print(i)

#for i in range(1, 11):
 #   if i == 2:
  #      break
   # print(i)


#n = 1
#while n < 10:
    #n = n + 1
   # if n == 2:
  #      continue
 #   print(n)


n = 5
while n < 10:
    print(n)
    break
n = n + 1

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































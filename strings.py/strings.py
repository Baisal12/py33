'============================String==================='
#строки - неизменяемый пит данных, который пердназначен для хранения текста , заключенного в одинарноые лтбо двойными кавычкоми
srting1 = 'скрока c одинарной кавычкой'
string2 = " c двойными кавыч"
string3 = "Don't" 
string4 = 'название магозина "Азбука"'
string5 = '''многочисленные текска в однарных кав. тут можно ипользовать как одинарные так и двойные кав.'''
string6 = """многочисленные текска в двойных кав. тут можно ипользовать как одинарные так и двойные кав."""
# string7 = 'hello' + 'worl'
# print(string7) 
#string8 = 'XA ' * 20 
#print(string8)

'===========================Экранизация строк==============='
'\n' #перенос на новкю строку 
#print('hello word') # hello world
'----------------------------------'
#print('hello \n word') #hello
                       #world
'----------------------------------'
#print('he\nllo world') #he
                       #llo world
'----------------------------------'
 
'\t' # табуляция(несколько пробелов)
#print('hello\t world') # hello   world
'----------------------------------'
#print('he\tllo word') # he   llo world
'----------------------------------'

'\v' # перенос на новуя строку но еще в конец передедущей 
#print('hello\vword\vmakrs') # hello
                            #      world
                            #           makers 
'----------------------------------'
'\r' # перенос каретки в самое начало строки 
#print('hello world\rA') # AEello world
'----------------------------------'

'\'' # отображает '
"\"" # отображант "
#print('don\'t')
#print("nome\\'makers")
'\\' # отображает \
#print('hello \\n -world') # hello \n - world


'============================Форматирование строк ================================'

title = 'Iphone15'
price = '1000'
#rint('я купил title за price $')

shop = 'Makers'
'1. f-стока'
#print(f'Я купил {title} за {price} $, в магазине {shop} ')


'2. %s'
#print('Я купил %s за %s $, в магазине %s' % (title, price, shop))

'3. str.format'
#print('Я купил {} за {}$, в магазине {}'.format(title, price, shop))


'===================================методы строк(str)=================================='
# методы - фуню которые относятся к определенноому типу данных, к ним относятся через точку

#print(dir(str))

'------------------------------------'
strin = 'hello world'
#print(strin.count('l')) #3
#print(strin.count('el')) #1
#print(strin.count('o w')) #1
#print(strin.count('hello')) #1
'-------------------------------------'
#print(strin.startswith('h')) #True
#print(strin.startswith('hello')) #True
'-------------------------------------'
string = 'makers'
#print(string.isalpha()) # true проверяет на буквы 
#print(string.isdigit())  #false - поверяет на числа
#print(string.isalnum()) 
string = ' hello.world.makers.bootcamp'
#print(string.split('o')) #['hell', '.w', 'rld.makers.b', '' , 'tcamp']
#print(string.replace('','$'))
string = '$12 hi$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$'
#print(string.strip('$'))


# ''.join(string) list переменная которая хронит тип данных

'==========================Индексы==========================='
# индекс - порядковый номер элемента последовательности 

# -11-10-9-8-7-6-5-4-3-2-1 
' h e l l o  w o r l d'
# 0 1 2 3 4 5 6 7 8 9 10

string = 'hello world'
#print (string[0])
#print (string[-1])
#print (string[5])

#cpez [start:end(не вкл):step]
#string[6:10]
#string[0:5]
#print(string[::2])
#print(string[::-1]) #dlrow olleh
#print(string[::-2])
























































































































































































































































































































































































































































































































































































































































































































































































































































































































